{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport * as Murmur3 from '@esfx/internal-murmur3';\r\n\r\ninterface Counter { next: number; }\r\nlet weakPrototypeCounters: WeakMap<object, Counter> | undefined;\r\nlet nullPrototypeCounter: Counter | undefined;\r\nlet localSymbolCounter: Counter | undefined;\r\nlet weakObjectHashes: WeakMap<object, number> | undefined;\r\nlet globalSymbolHashes: Map<symbol, number> | undefined;\r\nlet localSymbolHashes: Map<symbol, number> | undefined;\r\n\r\nconst maxInt32 = (2 ** 31) - 1;\r\nconst minInt32 = ~maxInt32;\r\nconst maxUint32 = (2 ** 32) - 1;\r\nconst minUint32 = 0;\r\nconst float64View = new DataView(new ArrayBuffer(8));\r\nconst defaultObjectSeed = Murmur3.createSeed();\r\nconst defaultStringSeed = Murmur3.createSeed();\r\nconst defaultLocalSymbolSeed = Murmur3.createSeed();\r\nconst defaultGlobalSymbolSeed = Murmur3.createSeed();\r\nconst defaultBigIntSeed = Murmur3.createSeed();\r\nlet objectSeed = defaultObjectSeed;\r\nlet stringSeed = defaultStringSeed;\r\nlet bigIntSeed = defaultBigIntSeed;\r\nlet localSymbolSeed = defaultLocalSymbolSeed;\r\nlet globalSymbolSeed = defaultGlobalSymbolSeed;\r\n\r\n/*@internal*/\r\nexport function hashBoolean(x: boolean) {\r\n    return x ? 1 : 0;\r\n}\r\n\r\nfunction isInt32(x: number) {\r\n    return Number.isInteger(x)\r\n        && x >= minInt32\r\n        && x <= maxInt32;\r\n}\r\n\r\nfunction hashInt32(x: number) {\r\n    return x;\r\n}\r\n\r\nfunction isUint32(x: number) {\r\n    return Number.isInteger(x)\r\n        && x >= minUint32\r\n        && x <= maxUint32;\r\n}\r\n\r\nfunction hashUint32(x: number) {\r\n    return x >> 0;\r\n}\r\n\r\nfunction hashFloat64(x: number) {\r\n    float64View.setFloat64(0, x);\r\n    return float64View.getInt32(0, /*littleEndian*/ true) ^ float64View.getInt32(4, /*littleEndian*/ true);\r\n}\r\n\r\n/*@internal*/\r\nexport function hashNumber(x: number) {\r\n    return isInt32(x) ? hashInt32(x) :\r\n        isUint32(x) ? hashUint32(x) :\r\n        hashFloat64(x);\r\n}\r\n\r\nfunction hashBuffer(buffer: Buffer, seed: number) {\r\n    const arrayBuffer = buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);\r\n    return Murmur3.hash(arrayBuffer, seed);\r\n}\r\n\r\nfunction hashStringWithSeed(x: string, encoding: string, seed: number) {\r\n    return hashBuffer(Buffer.from(x, encoding), seed);\r\n}\r\n\r\n/*@internal*/\r\nexport function combineHashes(x: number, y: number) {\r\n    return ((x << 7) | (x >>> 25)) ^ y;\r\n}\r\n\r\nfunction getRealBigIntHasher() {\r\n    const ZERO = BigInt(0);\r\n    const UINT32_MASK = BigInt(0xffffffff);\r\n    const SIZEOF_UINT32 = BigInt(32);\r\n    function hashBigInt(x: bigint) {\r\n        if (x === ZERO) return 0;\r\n        let hash = x < ZERO ? -1 : x > ZERO ? 1 : 0;\r\n        if (x < ZERO) x = -x;\r\n        while (x !== ZERO) {\r\n            hash = combineHashes(hash, Number(x & UINT32_MASK));\r\n            x = x >> SIZEOF_UINT32;\r\n        }\r\n        return hash;\r\n    }\r\n    return hashBigInt;\r\n}\r\n\r\nfunction getPseudoBigIntHasher() {\r\n    function hashBigInt(x: bigint) {\r\n        return hashStringWithSeed(x.toString(), \"ascii\", bigIntSeed);\r\n    }\r\n    return hashBigInt;\r\n}\r\n\r\n/*@internal*/\r\nexport const hashBigInt = typeof BigInt === \"function\" ? getRealBigIntHasher() : getPseudoBigIntHasher();\r\n\r\n/*@internal*/\r\nexport function hashString(x: string) {\r\n    return hashStringWithSeed(x, \"utf8\", stringSeed);\r\n}\r\n\r\nfunction hashGlobalSymbol(symbol: symbol, key: string) {\r\n    let hash = globalSymbolHashes && globalSymbolHashes.get(symbol);\r\n    if (hash === undefined) {\r\n        hash = hashStringWithSeed(key, \"utf8\", globalSymbolSeed);\r\n        if (!globalSymbolHashes) globalSymbolHashes = new Map();\r\n        globalSymbolHashes.set(symbol, hash);\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst getDescription = \"description\" in Symbol.prototype ? (symbol: symbol) => symbol.description :\r\n    (symbol: symbol) => {\r\n        const s = symbol.toString();\r\n        if (s.startsWith(\"Symbol(\") && s.endsWith(\")\")) {\r\n            return s.slice(7, -1);\r\n        }\r\n        return s;\r\n    };\r\n\r\nfunction hashLocalSymbol(symbol: symbol) {\r\n    let hash = localSymbolHashes && localSymbolHashes.get(symbol);\r\n    if (hash === undefined) {\r\n        if (!localSymbolCounter) localSymbolCounter = { next: 1 };\r\n        hash = combineHashes(localSymbolSeed, localSymbolCounter.next++);\r\n        if (symbol.description) hash = hashStringWithSeed(getDescription(symbol), \"utf8\", hash);\r\n        if (!localSymbolHashes) localSymbolHashes = new Map();\r\n        localSymbolHashes.set(symbol, hash);\r\n    }\r\n    return hash;\r\n}\r\n\r\n/*@internal*/\r\nexport function hashSymbol(x: symbol) {\r\n    const key = Symbol.keyFor(x);\r\n    return key !== undefined ? hashGlobalSymbol(x, key) : hashLocalSymbol(x);\r\n}\r\n\r\nfunction getPrototypeCounter(prototype: object | null) {\r\n    let counter: Counter | undefined;\r\n    if (prototype === null) {\r\n        counter = nullPrototypeCounter || (nullPrototypeCounter = { next: 1 });\r\n    }\r\n    else {\r\n        counter = weakPrototypeCounters && weakPrototypeCounters.get(prototype);\r\n        if (!counter) {\r\n            if (!weakPrototypeCounters) weakPrototypeCounters = new WeakMap();\r\n            weakPrototypeCounters.set(prototype, counter = { next: 1 });\r\n        }\r\n    }\r\n    return counter;\r\n}\r\n\r\n/*@internal*/\r\nexport function hashObject(x: object) {\r\n    let hash = weakObjectHashes && weakObjectHashes.get(x);\r\n    if (hash === undefined) {\r\n        if (!weakObjectHashes) weakObjectHashes = new WeakMap();\r\n        hash = getPrototypeCounter(Object.getPrototypeOf(x)).next++;\r\n        hash = combineHashes(objectSeed, hash);\r\n        weakObjectHashes.set(x, hash);\r\n    }\r\n    return hash;\r\n}\r\n\r\n/*@internal*/\r\nexport function hashUnknown(x: unknown) {\r\n    switch (typeof x) {\r\n        case \"boolean\": return hashBoolean(x);\r\n        case \"number\": return hashNumber(x);\r\n        case \"bigint\": return hashBigInt(x);\r\n        case \"string\": return hashString(x);\r\n        case \"symbol\": return hashSymbol(x);\r\n        case \"function\": return hashObject(x);\r\n        case \"object\":\r\n            if (x !== null) return hashObject(x);\r\n            // fall through\r\n        case \"undefined\":\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n// Test hooks\r\nhashUnknown.getState = () => ({\r\n    weakPrototypeCounters,\r\n    nullPrototypeCounter,\r\n    localSymbolCounter,\r\n    weakObjectHashes,\r\n    globalSymbolHashes,\r\n    localSymbolHashes,\r\n    objectSeed,\r\n    stringSeed,\r\n    bigIntSeed,\r\n    localSymbolSeed,\r\n    globalSymbolSeed\r\n});\r\n\r\nhashUnknown.setState = (state: Partial<ReturnType<typeof hashUnknown[\"getState\"]>>) => ({\r\n    weakPrototypeCounters,\r\n    nullPrototypeCounter,\r\n    localSymbolCounter,\r\n    weakObjectHashes,\r\n    globalSymbolHashes,\r\n    localSymbolHashes,\r\n    objectSeed = defaultObjectSeed,\r\n    stringSeed = defaultStringSeed,\r\n    bigIntSeed = defaultBigIntSeed,\r\n    localSymbolSeed = defaultLocalSymbolSeed,\r\n    globalSymbolSeed = defaultGlobalSymbolSeed\r\n} = state);"]}